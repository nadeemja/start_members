<?php
//Help function
function start_members_help($path, $arg) {
	
	$output = '';
	
	switch ($path){
	
		case "admin/help#start_members":
			
			$output = '<p>'. t("Help side for start members") .'</p>';
			
			break;
	
	} 
	
	return $output;
	
}// function start_members_help

//Set perimissions
function start_members_perm() {

	return array('access start members');
	
} // function start_members_perm()

//define block
function start_members_block($op = 'list', $delta = 0, $edit = array()){

	//Define blocks
	if ($op == "list"){
		
		$block = array();
		$block[0]["info"] = t("Memberlist Block");
	}

}//function _block

//define page
function start_members_all(){

	
	//This variable comes from the domain-access module and tells us the current domain
	global $_domain;
	global $user;
	
	//alternate query
	$q = db_query("
					SELECT 
						users.uid, users.name, mail
					
					FROM 
						users
					
					LEFT JOIN users_roles
						ON users.uid = users_roles.uid
						
					LEFT JOIN role
						ON users_roles.rid = role.rid
						
					WHERE role.name = '$_domain[subdomain]'
					
					GROUP BY
						users.uid
						
					ORDER BY 
						name ASC
					
					
				");
		
	//Loop and add to page_content
	while ($u = db_fetch_array($q)){
		
		//get user profile field values
		$q2 = db_query("
						SELECT
							fid, value, uid
						FROM
							profile_values
						
						WHERE
							profile_values.uid = $u[uid]
							AND fid IN (6,2,3,12)
					");
		
		while ($profile_values = db_fetch_array($q2))
			{
			
			switch($profile_values["fid"]){
				
				case 2:
					$u["first_name"] = $profile_values["value"];
				break;
				
				case 3:
					$u["last_name"] = $profile_values["value"];
				break;
				
				case 6:
					$u["date_of_birth"] = unserialize($profile_values["value"]);
				break;
				
				case 12:
					$u["stilling"] = $profile_values["value"];
				break;
				
			}
			
			$u = array_merge($u, $profile_values);	
		}
		
		//get users organic group membership
		$query_organic_groups = db_query("
		
							SELECT
								is_admin, node.nid, og_description, title
							
							FROM 
								og_uid
													
							LEFT JOIN og
								ON og_uid.nid = og.nid
					
							LEFT JOIN node 
								ON og.nid = node.nid 
							
							WHERE og_uid.uid = '$u[uid]'
							AND node.uid != '$u[uid]' 
		");
		
		// Put organic groups into array
		while ($organic_group_values = db_fetch_array($query_organic_groups))
			{
				$u["og"][] = $organic_group_values["title"];	
			}
			
		//See if title is array, and if so make it a comma separated string
		if (is_array($u["og"])){
			
				$u["title"] = implode(", ", $u["og"]);
			
			}
			
		//convert array keys to variables
		foreach($u as $key=>$value) { 
			$$key = $value; 
		}
		
		//Format date correctly
		if (is_array($u["date_of_birth"])){
			$u["date_of_birth"] = implode("/", $u["date_of_birth"]);		
		}
		
		//build array
		$users[] = $u;
		
		//Unset variables that are mistakenly carried over from loop to loop
		unset($date_of_birth);
		unset($title);
			
	}
	
	//Process users array into membertypes
	foreach ($users as $member){
		
			if(strlen($member["stilling"]) < 2){
				$members["usortert"][] = $member;
				}
				else{
				
						$members[$member["stilling"]][] = $member;
		
				}
				
		}
	
	$page_content .= dpm($members);
	
	//Generate members listing function
	
	function members_listing($members, $type, $title){
	
		//Return if it's not an array
		if(!is_array($members[$type])){
			
			return;
			
			}
		//Styret
		$page_content = "<div class='start_members_group'>";
		$page_content .= "<h2>$title</h2><table class='memberlisting'>";
		$page_content .= "<tr>";
		$page_content .= "<th>Fornavn</th>";
		$page_content .= "<th>Etternavn</th>";
		$page_content .= "<th>Bursdag</th>";
		$page_content .= "<th>Gruppetilhørighet</th>";
		$page_content .= "</tr>";
	
	
		foreach($members[$type] as $member){
		
				$page_content .= "<tr>";
				$page_content .="<td>$member[first_name]</td>";
				$page_content .="<td>$member[last_name]</td>";
				$page_content .="<td>$member[date_of_birth]</td>";
				$page_content .="<td>$member[title]</td>";
				$page_content .= "</tr>";	
		
			}
		$page_content .= "</table></div>"; 
	
		return $page_content;
	}
	
	//styret
	$page_content .= members_listing($members, "Styret", "Styret");
	
	//Gruppeledere
	$page_content .= members_listing($members, "Gruppeleder", "Gruppeledere");
	
	//Medlemmer
	$page_content .= members_listing($members, "Medlem", "Medlemmer");
	
	//Permisjon
	$page_content .= members_listing($members, "Permisjon", "På Permisjon");
	
	return $page_content;
}//_all()

//Menu links
function start_members_menu(){
	
	$items = array();
	
	//all page
	$items['start_members'] = array(
		'title' 			=> 'Start members',
		'page callback' 	=> 'start_members_all',
		'access arguments' 	=> array('access start members'),
		'type'				=> MENU_CALLBACK
	);
	
	return $items;
}
